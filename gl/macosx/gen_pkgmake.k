#!/usr/local/bin/konoha

String extension = ".dylib"
String sharedflag = "-dynamiclib"

//String extension = ".so"
//String sharedflag = "-shared"

int main (String[] args)
{
    if (|args| == 1) {
        OUT << '''
usage: gen_pkgmake.k (package name) (LDLIBS)
(example: gen_pkgmake.k math -lm)
'''
        return 0;
    }
    
    pkgname = args[1];
    
    filename = "makefile";
    OutputStream os = new OutputStream(filename);
    os << '''
# Makefile for konoha package
# This makefile is generated by gen_pkgmake.k
# shinpei(c)2009

CC = gcc
CFLAGS = -O2 -Wall -fmessage-length=0
LDLIBS = -lkonoha 
'''
    int i;
    for (i = 2; i < |args|; i++) {
        os << "LDLIBS += " << args[i] << EOL;
    }
    os << "library = " << pkgname << extension << EOL

    os << '''
.PHONY: all
all: $(library)

'''
    os << "objs = " << pkgname << ".o" << EOL
    os << pkgname << ".o: " << pkgname << ".c" << EOL
    os << "\t$(CC) $(CFLAGS) -o $@ -c $^" << EOL
    os << "$(library): $(objs)" << EOL
    os << "\t$(CC) " << sharedflag << " -Wl -o $@ $^ $(LDLIBS)" << EOL

    os << '''

.PHONY: clean
clean:
\t$(RM) -rf $(objs) $(library)

.PHONY: konoha_install
konoha_install: $(library)
'''
    os << "\tmkdir -p .konoha/" << pkgname << EOL
    os << "\tcp $(library) .konoha/" << pkgname << EOL
    os << "\tcp " << pkgname << ".k .konoha/" << pkgname << EOL

    
    os.close();
    
    return 0;
 }
	

