#!/usr/local/bin/konoha

int main (String[] args)
{
    if (|args| == 1) {
        OUT << '''
usage: gen_pkgmake.k -(l,linux|m, macosx|w,windows) (package name) (LDLIBS)
(example: gen_pkgmake.k -m math -lm)
''';
        return 0;
    } else if (|args| < 3) {
		OUT << '''
arguments are not enough
''';
		return 0;
	}
	print args;
	String extension, sharedflag, env;
	if (args[1][1] == "m") {
		OUT << "mac mode" << EOL;
		env = "macosx";
		extension = ".dylib";
		sharedflag = "-dynamiclib";
	} else if (args[1][1] == "l") {
		OUT << "linux mode" << EOL;
		env = "linux"
		extension = ".so"
		sharedflag = "-shared"
	} else {
		OUT <<
			#illegal parameters : %s{args[1]}
		<< EOL;
	}
    pkgname = args[2];
    
    filename = env + "_32.mk";
	OutputStream os = new OutputStream(filename, "w");
    os << '''
# Makefile for konoha package
# This makefile is generated by gen_pkgmake.k
# shinpei(c)2009

CC = gcc
CFLAGS = -O2 -Wall -fmessage-length=0
LDLIBS = -lkonoha 
'''
    int i;
    for (i = 3; i < |args|; i++) {
        os << "LDLIBS += " << args[i] << EOL;
    }
    os << "library = " << pkgname << "_" << env << "_32" << extension << EOL

    os << '''
.PHONY: all
all: $(library)

'''
    os << "objs = " << pkgname << ".o" << EOL
    os << pkgname << ".o: " << pkgname << ".c" << EOL
    os << "\t$(CC) $(CFLAGS) -o $@ -c $^" << EOL
    os << "$(library): $(objs)" << EOL
    os << "\t$(CC) " << sharedflag << " -Wl -o $@ $^ $(LDLIBS)" << EOL

    os << '''

.PHONY: clean
clean:
\t$(RM) -rf $(objs) $(library)

.PHONY: konoha_install
konoha_install: $(library)
'''
    os << "\tmkdir -p .konoha/" << pkgname << EOL
    os << "\tcp $(library) .konoha/" << pkgname << EOL
    os << "\tcp " << pkgname << ".k .konoha/" << pkgname << EOL

    
    os.close();
    
    return 0;
 }
	

